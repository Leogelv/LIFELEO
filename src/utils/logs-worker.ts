import { supabase } from './supabase/client'
import { logger } from './logger'

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {
  logger.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Supabase')
  process.exit(1)
}

logger.info('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä –¥–ª—è habit_logs...', {
  domain: process.env.RAILWAY_PUBLIC_DOMAIN,
  environment: process.env.RAILWAY_ENVIRONMENT_NAME
})

try {
  const channel = supabase.channel('test-logs-channel')
    .on(
      'postgres_changes',
      { event: '*', schema: 'public', table: 'habit_logs' },
      (payload) => {
        logger.info('üìù LOGS UPDATE:', payload)
      }
    )
    .subscribe((status) => {
      logger.info('üîå LOGS CHANNEL STATUS:', status)
    })

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  process.on('SIGINT', () => {
    logger.info('üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è...')
    channel.unsubscribe()
    process.exit(0)
  })

  process.on('SIGTERM', () => {
    logger.info('üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è...')
    channel.unsubscribe()
    process.exit(0)
  })

  // –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–Ω—ã–º
  setInterval(() => {
    logger.debug('üíì Worker heartbeat')
  }, 60000) // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

} catch (error) {
  logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–æ—Ä–∫–µ—Ä–∞:', error)
  process.exit(1)
} 