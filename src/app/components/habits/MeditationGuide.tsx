'use client'

import { useState, useEffect, useContext } from 'react'
import { motion } from 'framer-motion'
import { supabase } from '@/utils/supabase/client'
import { habitsRealtime } from '@/utils/habits-realtime'
import { logger } from '@/utils/logger'
import { UserIdContext } from '@/contexts/UserIdContext'
import { Icon } from '@iconify/react'
import { useTelegram } from '@/app/hooks/useTelegram'

interface MeditationStats {
  totalHours: number
  averageDaily: number
}

interface Stage {
  id: number
  name: string
  description: string
  minHours: number
  technique: string
  tips: string[]
}

const meditationStages: Stage[] = [
  {
    id: 1,
    name: "–ê–Ω–∞–ø–∞–Ω–∞: –ù–∞—á–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø",
    description: "–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –¥—ã—Ö–∞–Ω–∏–µ–º. –†–∞–∑–≤–∏—Ç–∏–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏.",
    minHours: 0,
    technique: "–°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–±–ª–∞—Å—Ç–∏ –≤–æ–∫—Ä—É–≥ –Ω–æ–∑–¥—Ä–µ–π –∏ –≤–µ—Ä—Ö–Ω–µ–π –≥—É–±—ã. –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –¥—ã—Ö–∞–Ω–∏–µ–º, –Ω–µ –ø—ã—Ç–∞—è—Å—å –µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å.",
    tips: [
      "–°–∏–¥–∏—Ç–µ —Å –ø—Ä—è–º–æ–π —Å–ø–∏–Ω–æ–π",
      "–ù–µ –º–µ–Ω—è–π—Ç–µ –¥—ã—Ö–∞–Ω–∏–µ",
      "–ü—Ä–∏ –æ—Ç–≤–ª–µ—á–µ–Ω–∏–∏ –º—è–≥–∫–æ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥—ã—Ö–∞–Ω–∏—é",
      "–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –º–∏–Ω–∏–º—É–º 2 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å"
    ]
  },
  {
    id: 2,
    name: "–ê–Ω–∞–ø–∞–Ω–∞: –£–≥–ª—É–±–ª–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏",
    description: "–†–∞–∑–≤–∏—Ç–∏–µ –±–æ–ª–µ–µ —Ç–æ–Ω–∫–æ–≥–æ –æ—Å–æ–∑–Ω–∞–≤–∞–Ω–∏—è –¥—ã—Ö–∞–Ω–∏—è –∏ –æ—â—É—â–µ–Ω–∏–π.",
    minHours: 20,
    technique: "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –¥—ã—Ö–∞–Ω–∏–µ–º, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Å—É–∂–∞—è –æ–±–ª–∞—Å—Ç—å –≤–Ω–∏–º–∞–Ω–∏—è –¥–æ –º–µ–Ω—å—à–µ–π —Ç–æ—á–∫–∏ –º–µ–∂–¥—É –Ω–æ–∑–¥—Ä—è–º–∏ –∏ –≤–µ—Ä—Ö–Ω–µ–π –≥—É–±–æ–π.",
    tips: [
      "–û—Ç–º–µ—á–∞–π—Ç–µ —Ç–æ–Ω–∫–∏–µ –æ—â—É—â–µ–Ω–∏—è",
      "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ—Å—Ç—å –≤–Ω–∏–º–∞–Ω–∏—è",
      "–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–µ–≤–æ–∑–º—É—Ç–∏–º—ã–º–∏ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—Ç–≤–ª–µ—á–µ–Ω–∏–π"
    ]
  },
  {
    id: 3,
    name: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ –í–∏–ø–∞—Å—Å–∞–Ω—É",
    description: "–ù–∞—á–∞–ª–æ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–ª–∞ –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –æ—â—É—â–µ–Ω–∏—è–º–∏.",
    minHours: 50,
    technique: "–°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —Ç–µ–ª–æ —á–∞—Å—Ç—å –∑–∞ —á–∞—Å—Ç—å—é, –Ω–∞–±–ª—é–¥–∞—è –∑–∞ –ª—é–±—ã–º–∏ –æ—â—É—â–µ–Ω–∏—è–º–∏ —Å —Ä–∞–≤–Ω–æ—Å—Ç–Ω–æ—Å—Ç—å—é.",
    tips: [
      "–î–≤–∏–≥–∞–π—Ç–µ—Å—å —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏",
      "–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ –≤—Å–µ –æ—â—É—â–µ–Ω–∏—è",
      "–ü–æ–º–Ω–∏—Ç–µ –æ –Ω–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–µ",
      "–°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Ä–∞–≤–Ω–æ—Å—Ç–Ω–æ—Å—Ç—å"
    ]
  },
  {
    id: 4,
    name: "–í–∏–ø–∞—Å—Å–∞–Ω–∞: –£–≥–ª—É–±–ª–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏",
    description: "–†–∞–∑–≤–∏—Ç–∏–µ –±–æ–ª–µ–µ —Ç–æ–Ω–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –Ω–µ–ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞ –∏ –ø—É—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏.",
    minHours: 100,
    technique: "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–∞, —Ä–∞–∑–≤–∏–≤–∞—è –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ç—Ä–µ—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.",
    tips: [
      "–ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –∏–∑–º–µ–Ω—á–∏–≤–æ—Å—Ç—å—é –æ—â—É—â–µ–Ω–∏–π",
      "–ù–µ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π",
      "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—É—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏",
      "–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ —Å —É—Å–µ—Ä–¥–∏–µ–º"
    ]
  },
  {
    id: 5,
    name: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞",
    description: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—É—é –∂–∏–∑–Ω—å –∏ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.",
    minHours: 200,
    technique: "–°–æ—á–µ—Ç–∞–π—Ç–µ —Ñ–æ—Ä–º–∞–ª—å–Ω—É—é –ø—Ä–∞–∫—Ç–∏–∫—É —Å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å—é –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏.",
    tips: [
      "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è",
      "–†–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ—Å–µ—â–∞–π—Ç–µ —Ä–µ—Ç—Ä–∏—Ç—ã",
      "–ò–∑—É—á–∞–π—Ç–µ –î—Ö–∞–º–º—É",
      "–î–µ–ª–∏—Ç–µ—Å—å –∑–∞—Å–ª—É–≥–∞–º–∏ —Å –¥—Ä—É–≥–∏–º–∏"
    ]
  }
]

interface MeditationGuideProps {
  habit: {
    id: string
    name: string
    category: string
  }
  onClose: () => void
}

export function MeditationGuide({ habit, onClose }: MeditationGuideProps) {
  const [stats, setStats] = useState<MeditationStats | null>(null)
  const [currentStage, setCurrentStage] = useState<Stage | null>(null)
  const userId = useContext(UserIdContext)
  const { safeAreaInset, isTelegramWebApp } = useTelegram()

  const loadMeditationStats = async () => {
    try {
      logger.debug('üßò‚Äç‚ôÇÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–µ–¥–∏—Ç–∞—Ü–∏–π')
      
      const { data, error } = await supabase
        .from('habit_logs')
        .select('value, completed_at')
        .eq('habit_id', habit.id)
        .order('completed_at', { ascending: false })

      if (error) throw error

      if (data) {
        const totalMinutes = data.reduce((sum, log) => sum + log.value, 0)
        const totalHours = totalMinutes / 60

        // –°—á–∏—Ç–∞–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        const thirtyDaysAgo = new Date()
        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30)
        
        const recentLogs = data.filter(log => 
          new Date(log.completed_at) >= thirtyDaysAgo
        )
        
        const averageDaily = recentLogs.reduce((sum, log) => sum + log.value, 0) / 30 / 60

        logger.info('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞', { totalHours, averageDaily })
        setStats({ totalHours, averageDaily })

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø
        const stage = meditationStages.findLast(stage => totalHours >= stage.minHours)
        setCurrentStage(stage || meditationStages[0])
      }
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏', error)
    }
  }

  useEffect(() => {
    loadMeditationStats()

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ª–æ–≥–∞—Ö
    const unsubscribe = habitsRealtime.subscribe(`meditation-logs`, (payload) => {
      if (payload.table === 'habit_logs' && 
          'habit_id' in payload.new && 
          payload.new.habit_id === habit.id) {
        logger.info('üîÑ –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –ª–æ–≥–∞—Ö –º–µ–¥–∏—Ç–∞—Ü–∏–∏')
        loadMeditationStats()
      }
    })

    return () => {
      unsubscribe()
    }
  }, [habit.id])

  if (!stats || !currentStage) return null

  const nextStage = meditationStages.find(stage => stage.minHours > stats.totalHours)
  const progress = nextStage 
    ? (stats.totalHours / nextStage.minHours) * 100 
    : 100

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm"
         style={{
           paddingTop: isTelegramWebApp ? `${safeAreaInset.top}px` : '16px',
           paddingBottom: isTelegramWebApp ? `${safeAreaInset.bottom}px` : '16px',
           paddingLeft: isTelegramWebApp ? `${safeAreaInset.left}px` : '16px',
           paddingRight: isTelegramWebApp ? `${safeAreaInset.right}px` : '16px'
         }}
         onClick={onClose}>
      <div 
        className="w-full max-w-2xl max-h-[90vh] overflow-y-auto rounded-2xl"
        onClick={e => e.stopPropagation()}
      >
        <div className="space-y-6 bg-zinc-900/50 rounded-2xl backdrop-blur-xl"
             style={{
               padding: isTelegramWebApp ? 
                 `${Math.max(16, safeAreaInset.top)}px ${Math.max(16, safeAreaInset.right)}px ${Math.max(16, safeAreaInset.bottom)}px ${Math.max(16, safeAreaInset.left)}px` : 
                 '24px'
             }}>
          {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
          <div className="flex justify-between items-center">
            <h3 className="text-xl font-medium text-purple-400">–í–∞—à –ø—É—Ç—å –≤ –í–∏–ø–∞—Å—Å–∞–Ω–µ</h3>
            <button
              onClick={onClose}
              className="p-2 rounded-full hover:bg-white/10 transition-colors"
            >
              <Icon icon="solar:close-circle-bold" className="w-6 h-6 text-white/60" />
            </button>
          </div>

          {/* –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å */}
          <div className="space-y-2">
            <h4 className="text-xl font-medium text-purple-400">–í–∞—à –ø—É—Ç—å –≤ –í–∏–ø–∞—Å—Å–∞–Ω–µ</h4>
            <div className="grid grid-cols-2 gap-4">
              <div className="p-4 rounded-xl bg-white/5">
                <div className="text-sm text-purple-400/60">–í—Å–µ–≥–æ —á–∞—Å–æ–≤ –ø—Ä–∞–∫—Ç–∏–∫–∏</div>
                <div className="text-2xl font-medium text-purple-400">{Math.round(stats.totalHours)}</div>
              </div>
              <div className="p-4 rounded-xl bg-white/5">
                <div className="text-sm text-purple-400/60">–°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å</div>
                <div className="text-2xl font-medium text-purple-400">
                  {stats.averageDaily.toFixed(1)}—á
                </div>
              </div>
            </div>
          </div>

          {/* –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø */}
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <h5 className="font-medium text-purple-400">–¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø</h5>
              <span className="px-3 py-1 rounded-full bg-purple-400/20 text-purple-400 text-sm">
                {currentStage.name}
              </span>
            </div>
            
            <p className="text-white/60">{currentStage.description}</p>

            <div className="space-y-2">
              <h6 className="font-medium text-purple-400">–¢–µ—Ö–Ω–∏–∫–∞:</h6>
              <p className="text-white/80">{currentStage.technique}</p>
            </div>

            <div className="space-y-2">
              <h6 className="font-medium text-purple-400">–°–æ–≤–µ—Ç—ã:</h6>
              <ul className="list-disc list-inside space-y-1 text-white/80">
                {currentStage.tips.map((tip, index) => (
                  <li key={index}>{tip}</li>
                ))}
              </ul>
            </div>
          </div>

          {/* –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø */}
          {nextStage && (
            <div className="space-y-2">
              <h5 className="font-medium text-purple-400">–°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø</h5>
              <div className="p-4 rounded-xl bg-white/5 space-y-2">
                <div className="flex items-center justify-between">
                  <span className="text-purple-400">{nextStage.name}</span>
                  <span className="text-sm text-purple-400/60">
                    —á–µ—Ä–µ–∑ {nextStage.minHours - Math.round(stats.totalHours)} —á–∞—Å–æ–≤
                  </span>
                </div>
                <div className="h-2 rounded-full bg-white/10 overflow-hidden">
                  <motion.div
                    className="h-full bg-purple-400"
                    initial={{ width: 0 }}
                    animate={{ width: `${progress}%` }}
                  />
                </div>
              </div>
            </div>
          )}

          {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è */}
          <div className="p-4 rounded-xl bg-purple-400/10 border border-purple-400/20">
            <h5 className="text-lg font-medium text-purple-400 mb-2">
              –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            </h5>
            <p className="text-white/80">
              {stats.totalHours < 20 
                ? "–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –ê–Ω–∞–ø–∞–Ω—É: —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –¥—ã—Ö–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –Ω–æ—Å–∞. –ù–∞—á–Ω–∏—Ç–µ —Å 20-30 –º–∏–Ω—É—Ç —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º."
                : stats.totalHours < 50
                ? "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ê–Ω–∞–ø–∞–Ω—É, –Ω–æ —Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –±–æ–ª–µ–µ —Ç–æ–Ω–∫–∏—Ö –æ—â—É—â–µ–Ω–∏—è—Ö. –ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ 1 —á–∞—Å –≤ –¥–µ–Ω—å."
                : "–í—ã –≥–æ—Ç–æ–≤—ã –∫ –ø—Ä–∞–∫—Ç–∏–∫–µ –í–∏–ø–∞—Å—Å–∞–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ —Å —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–ª–∞. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫—É 1 —á–∞—Å —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º."}
            </p>
          </div>
        </div>
      </div>
    </div>
  )
} 