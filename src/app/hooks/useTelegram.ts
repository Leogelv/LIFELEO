'use client'

import { useEffect, useState } from 'react'
import type { TelegramWebApp } from '../types/telegram-webapp'

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
const defaultSafeAreaInset = { top: 0, right: 0, bottom: 0, left: 0 }
const defaultUser = {
  id: 0,
  firstName: '',
  lastName: '',
  username: '',
  photoUrl: ''
}

// –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ .env.local
const ENV_USER_ID = process.env.NEXT_PUBLIC_USER_ID ? parseInt(process.env.NEXT_PUBLIC_USER_ID) : 375634162
const ENV_USER_NAME = process.env.NEXT_PUBLIC_USER_NAME || '–õ–µ–æ–Ω–∏–¥'
const ENV_PASSWORD = process.env.NEXT_PUBLIC_SIXDIGIT_PASSWORD || '323800'

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è userId –∏–∑ URL
export function getUserIdFromUrl(): number {
  if (typeof window === 'undefined') return 0;
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º URL-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ URLSearchParams
    const urlParams = new URLSearchParams(window.location.search);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    let userIdParam = urlParams.get('user_id') || urlParams.get('userid') || urlParams.get('userId') || urlParams.get('telegram_id');
    
    // –Ø–≤–Ω–æ –ª–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    console.log('üîé –ü–æ–∏—Å–∫ –≤ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö:', { 
      user_id: urlParams.get('user_id'),
      userid: urlParams.get('userid'),
      userId: urlParams.get('userId'),
      telegram_id: urlParams.get('telegram_id')
    });
    console.log('üîé –ü–æ–ª–Ω—ã–π URL:', window.location.href);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –≤–µ—Å—å URL –ø–æ—Å–ª–µ "?" —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ userid
    if (!userIdParam && window.location.href.includes('?')) {
      const rawQuery = window.location.href.split('?')[1];
      console.log('üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ rawQuery:', rawQuery);
      if (rawQuery && !rawQuery.includes('=')) {
        userIdParam = rawQuery;
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ URL —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–µ—à-—Ñ—Ä–∞–≥–º–µ–Ω—Ç —Å userid
    if (!userIdParam && window.location.href.includes('#')) {
      const hashFragment = window.location.href.split('#')[1];
      console.log('üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ hashFragment:', hashFragment);
      if (hashFragment && !isNaN(parseInt(hashFragment))) {
        userIdParam = hashFragment;
      }
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
    console.log('üîé –ù–∞–π–¥–µ–Ω–Ω—ã–π userIdParam –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π:', userIdParam);
    
    if (userIdParam) {
      // –û—á–∏—â–∞–µ–º –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–µ—á–∏—Å–ª–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
      const cleanedParam = userIdParam.replace(/[^0-9]/g, '');
      console.log('üîé –û—á–∏—â–µ–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä:', cleanedParam);
      
      const parsedUserId = parseInt(cleanedParam, 10);
      
      if (!isNaN(parsedUserId)) {
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω userId –∏–∑ URL:', parsedUserId);
        return parsedUserId;
      }
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π ID, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    console.log('‚ö†Ô∏è userId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ URL, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Å—å URL –Ω–∞–ø—Ä—è–º—É—é:', window.location.href);
    
    // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –∏—â–µ–º –ª—é–±–æ–µ —á–∏—Å–ª–æ –≤ URL
    const urlNumberMatch = window.location.href.match(/(\d{6,})/);
    if (urlNumberMatch) {
      const extractedNumber = parseInt(urlNumberMatch[0], 10);
      console.log('üîé –ù–∞–π–¥–µ–Ω–æ —á–∏—Å–ª–æ –≤ URL:', extractedNumber);
      return extractedNumber;
    }

    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ userId –≤ URL, –∏—Å–ø–æ–ª—å–∑—É—é –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π ID');
    return 375634162; // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ userId –∏–∑ URL:', error);
    return 375634162;
  }
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL
export function getUsernameFromUrl(): string {
  if (typeof window === 'undefined') return ENV_USER_NAME;
  
  try {
    const urlParams = new URLSearchParams(window.location.search);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–º–µ–Ω–∏
    let nameParam = urlParams.get('name') || urlParams.get('username') || urlParams.get('user_name');
    
    console.log('üîé –ü–æ–∏—Å–∫ –∏–º–µ–Ω–∏ –≤ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö:', { 
      name: urlParams.get('name'),
      username: urlParams.get('username'),
      user_name: urlParams.get('user_name')
    });
    
    if (nameParam) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ –∏–º—è –∏–∑ URL:', nameParam);
      return nameParam;
    }
    
    // –ù–µ –Ω–∞—à–ª–∏ –∏–º—è –≤ URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑ .env.local
    console.log('‚ö†Ô∏è –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∏–∑ .env.local:', ENV_USER_NAME);
    return ENV_USER_NAME;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –∏–∑ URL:', error);
    return ENV_USER_NAME;
  }
}

export function useTelegram() {
  const [userPhoto, setUserPhoto] = useState<string>('')
  const [userName, setUserName] = useState<string>('')
  const [isExpanded, setIsExpanded] = useState(false)
  const [userId, setUserId] = useState<number>(0)
  const [safeAreaInset, setSafeAreaInset] = useState(defaultSafeAreaInset)
  const [isTelegramWebApp, setIsTelegramWebApp] = useState(false)
  const [isInitialized, setIsInitialized] = useState(false)
  const [isClient, setIsClient] = useState(false)
  const [isPasswordVerified, setIsPasswordVerified] = useState(false)
  const [showPasswordModal, setShowPasswordModal] = useState(false)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  useEffect(() => {
    setIsClient(true)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–∞—Ä–æ–ª—å —É–∂–µ –≤–≤–µ–¥–µ–Ω
    if (typeof window !== 'undefined') {
      const verified = localStorage.getItem('passwordVerified') === 'true'
      setIsPasswordVerified(verified)
    }
  }, [])

  useEffect(() => {
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –∏–ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –≤—ã—Ö–æ–¥–∏–º
    if (!isClient || isInitialized) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    const checkUrlParams = () => {
      try {
        if (typeof window === 'undefined') return false;
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–≤–ª–µ—á–µ–Ω–∏—è userId
        const extractedUserId = getUserIdFromUrl();
        
        if (extractedUserId) {
          console.log('–í—Ö–æ–¥ –ø–æ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä—É user_id:', extractedUserId);
          setUserId(extractedUserId);
          
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const extractedUsername = getUsernameFromUrl();
          setUserName(extractedUsername);
          
          // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ—Ç–æ, —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
          const urlParams = new URLSearchParams(window.location.search);
          const photoParam = urlParams.get('photo') || urlParams.get('photo_url') || '';
          setUserPhoto(photoParam);
          
          setIsInitialized(true);
          return true;
        }
        return false;
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:', error);
        return false;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram WebApp
    const isTelegramEnvironment = () => {
      if (typeof window === 'undefined') return false;
      
      return window.location.href.includes('tgWebAppData') || 
             window.location.href.includes('tgWebAppPlatform') ||
             (window.Telegram && window.Telegram.WebApp);
    }

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
    const initTelegram = () => {
      if (typeof window === 'undefined') return false;
      
      try {
        const telegram = window.Telegram
        const webApp = telegram?.WebApp

        if (webApp) {
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
          webApp.ready()
          webApp.expand()
          
          // –ü—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö
          try {
            webApp.requestFullscreen()
          } catch (e) {
            console.warn('requestFullscreen –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ WebApp')
          }
          
          try {
            webApp.isVerticalSwipesEnabled = false
            webApp.disableVerticalSwipes()
          } catch (e) {
            console.warn('disableVerticalSwipes –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ WebApp')
          }
          
          webApp.setHeaderColor('#1a1a1a')
          webApp.setBackgroundColor('#1a1a1a')
          setIsExpanded(true)
          setIsTelegramWebApp(true)

          // –ü–æ–ª—É—á–∞–µ–º SafeArea
          if (webApp.SafeAreaInset) {
            setSafeAreaInset(webApp.SafeAreaInset)
          }

          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (webApp.initDataUnsafe?.user) {
            const user = webApp.initDataUnsafe.user
            setUserPhoto(user.photo_url || '')
            setUserName(user.first_name || user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
            setUserId(user.id || 0)
            setIsInitialized(true)
            return true
          }
        }
        return false
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error)
        return false
      }
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤ –∫–∞–∫–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∑–∞–ø—É—â–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const isTelegram = isTelegramEnvironment()
    
    if (isTelegram) {
      // –ï—Å–ª–∏ –≤ Telegram, –ø—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å WebApp
      const isTelegramInitialized = initTelegram()
      
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å WebApp, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ URL
      if (!isTelegramInitialized) {
        checkUrlParams()
      }
      
      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
      const script = document.querySelector('script[src*="telegram-web-app.js"]')
      if (script) {
        script.addEventListener('load', initTelegram)
      }
    } else {
      // –ï—Å–ª–∏ –Ω–µ –≤ Telegram, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ URL
      const isUrlParamsFound = checkUrlParams()
      
      // –ï—Å–ª–∏ –∏ –≤ URL –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ .env.local
      if (!isUrlParamsFound) {
        console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ .env.local –¥–ª—è –≤—Ö–æ–¥–∞')
        setUserId(ENV_USER_ID)
        setUserName(ENV_USER_NAME)
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–∞—Ä–æ–ª–µ–º, –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –µ—â–µ –Ω–µ –±—ã–ª –≤–≤–µ–¥–µ–Ω
        if (!isPasswordVerified) {
          setShowPasswordModal(true)
        } else {
          setIsInitialized(true)
        }
      }
    }

    return () => {
      if (typeof window !== 'undefined') {
        const script = document.querySelector('script[src*="telegram-web-app.js"]')
        if (script) {
          script.removeEventListener('load', initTelegram)
        }
      }
    }
  }, [isClient, isInitialized, isPasswordVerified])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
  const handlePasswordSuccess = () => {
    setIsPasswordVerified(true)
    setShowPasswordModal(false)
    setIsInitialized(true)
  }

  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç user –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  const user = {
    id: userId,
    firstName: userName.split(' ')[0],
    lastName: userName.split(' ').slice(1).join(' '),
    username: userName,
    photoUrl: userPhoto
  }

  return {
    userPhoto,
    userName,
    userId,
    isExpanded,
    safeAreaInset,
    isTelegramWebApp,
    user,
    isInitialized,
    isClient,
    showPasswordModal,
    handlePasswordSuccess,
    ENV_PASSWORD
  }
} 