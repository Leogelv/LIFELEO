const { createClient } = require('@supabase/supabase-js')

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ Supabase
const supabase = createClient(
  'https://supashkola.ru',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJyb2xlIjogImFub24iLAogICJpc3MiOiAic3VwYWJhc2UiLAogICJpYXQiOiAxNzM0ODExMjAwLAogICJleHAiOiAxODkyNTc3NjAwCn0.CkO2sAnfGPgtTGHckFJhoF5_LnmecwWdigoC-N43ooI'
)

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞—Å–∫–∞–º–∏ –∏ —Ö—ç–±–∏—Ç–∞–º–∏
async function processRealtime() {
  try {
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è —Ç–∞—Å–∫–æ–≤ (is_habit = false)
    const tasksChannel = supabase.channel('tasks-channel')
      .on(
        'postgres_changes',
        { 
          event: '*', 
          schema: 'public', 
          table: 'todos',
          filter: 'is_habit=eq.false'
        },
        (payload) => {
          console.log('üéØ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ç–∞—Å–∫–∞—Ö:', {
            event: payload.eventType,
            task: payload.new?.name || payload.old?.name,
            id: payload.new?.id || payload.old?.id
          })
        }
      )
      .subscribe((status) => {
        console.log('üì° –°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–∞ —Ç–∞—Å–∫–æ–≤:', status)
      })

    // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è —Ö—ç–±–∏—Ç–æ–≤ (is_habit = true)
    const habitsChannel = supabase.channel('habits-channel')
      .on(
        'postgres_changes',
        { 
          event: '*', 
          schema: 'public', 
          table: 'todos',
          filter: 'is_habit=eq.true'
        },
        (payload) => {
          console.log('üí™ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ö—ç–±–∏—Ç–∞—Ö:', {
            event: payload.eventType,
            habit: payload.new?.name || payload.old?.name,
            id: payload.new?.id || payload.old?.id
          })
        }
      )
      .subscribe((status) => {
        console.log('üì° –°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–∞ —Ö—ç–±–∏—Ç–æ–≤:', status)
      })

    // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ —Ö—ç–±–∏—Ç–æ–≤
    const habitLogsChannel = supabase.channel('habit-logs-channel')
      .on(
        'postgres_changes',
        { 
          event: '*', 
          schema: 'public', 
          table: 'habit_logs'
        },
        (payload) => {
          console.log('üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –ª–æ–≥–∞—Ö —Ö—ç–±–∏—Ç–æ–≤:', {
            event: payload.eventType,
            habitId: payload.new?.habit_id || payload.old?.habit_id,
            value: payload.new?.value
          })
        }
      )
      .subscribe((status) => {
        console.log('üì° –°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤:', status)
      })

    // –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–Ω—ã–º –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    process.on('SIGINT', () => {
      console.log('üëã –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
      tasksChannel.unsubscribe()
      habitsChannel.unsubscribe()
      habitLogsChannel.unsubscribe()
      process.exit()
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Ä–∫–µ—Ä –¥–ª—è —Ç–∞—Å–∫–æ–≤ –∏ —Ö—ç–±–∏—Ç–æ–≤...')
processRealtime() 